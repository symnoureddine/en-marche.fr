<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>

        <!-- RabbitMQ -->
        <service id="app.consumer.service_locator" public="false">
            <argument type="collection">
                <argument key="app.mailer.campaign" type="service" id="app.mailer.campaign" />
                <argument key="app.mailer.transactional" type="service" id="app.mailer.transactional" />
                <argument key="app.mailer.campaign_client" type="service" id="app.mailer.campaign_client" />
                <argument key="app.mailer.transactional_client" type="service" id="app.mailer.transactional_client" />
                <argument key="manager" type="service" id="doctrine.orm.entity_manager" />
                <argument key="Psr\Log\LoggerInterface" type="service" id="logger" />
                <argument key="Symfony\Component\Validator\Validator\ValidatorInterface" type="service" id="validator" />
                <argument key="AppBundle\Repository\AdherentRepository" type="service" id="AppBundle\Repository\AdherentRepository"/>
                <argument key="AppBundle\Repository\Projection\ReferentManagedUserRepository" type="service" id="AppBundle\Repository\Projection\ReferentManagedUserRepository"/>
            </argument>

            <tag name="container.service_locator" />
        </service>

        <service id="AppBundle\Consumer\CampaignMailerConsumer" parent="app.consumer.abstract_mailer_consumer">
            <argument type="service" id="app.consumer.service_locator" />
            <call method="setEmailClient">
                <argument type="service" id="app.mailer.campaign_client"/>
            </call>
        </service>

        <service id="AppBundle\Consumer\TransactionalMailerConsumer" parent="app.consumer.abstract_mailer_consumer">
            <argument type="service" id="app.consumer.service_locator" />
            <call method="setEmailClient">
                <argument type="service" id="app.mailer.transactional_client"/>
            </call>
        </service>

        <service id="app.consumer.abstract_mailer_consumer" class="AppBundle\Consumer\AbstractMailerConsumer" parent="app_abstract_consumer">
            <argument type="service" id="app.consumer.service_locator" />
            <call method="setEmailRepository">
                <argument type="service" id="AppBundle\Repository\EmailRepository"/>
            </call>
        </service>

        <service id="AppBundle\Consumer\MailerConsumer" parent="app_abstract_consumer">
            <call method="setMailerService">
                <argument type="service" id="app.mailer.campaign"/>
            </call>
        </service>

        <service id="AppBundle\Consumer\ReferentMessageDispatcherConsumer" parent="app_abstract_consumer">
            <argument type="service" id="app.consumer.service_locator" />
            <call method="setMailer">
                <argument type="service" id="app.mailer.campaign"/>
            </call>
            <call method="setReferentManagedUserRepository">
                <argument type="service" id="AppBundle\Repository\Projection\ReferentManagedUserRepository"/>
            </call>
            <call method="setReferentMessageRepository">
                <argument type="service" id="AppBundle\Repository\ReferentManagedUsersMessageRepository"/>
            </call>
        </service>

        <service id="AppBundle\Consumer\DeputyMessageDispatcherConsumer" parent="app_abstract_consumer">
            <argument type="service" id="app.consumer.service_locator" />
            <call method="setMailer">
                <argument type="service" id="app.mailer.campaign"/>
            </call>
            <call method="setAdherentRepository">
                <argument type="service" id="AppBundle\Repository\AdherentRepository"/>
            </call>
            <call method="setDeputyManagedUsersMessageRepository">
                <argument type="service" id="AppBundle\Repository\DeputyManagedUsersMessageRepository"/>
            </call>
        </service>

        <service id="app_abstract_consumer" class="AppBundle\Consumer\AbstractConsumer" abstract="true">
            <argument type="service" id="validator" />
            <argument type="service" id="doctrine.orm.entity_manager" />
            <call method="setLogger">
                <argument type="service" id="logger" />
            </call>
            <argument type="service" id="app.consumer.service_locator" />
        </service>

        <service id="AppBundle\Consumer\ProjectCitizenCreationNotificationConsumer" parent="app_abstract_consumer">
            <argument type="service" id="app.consumer.service_locator" />
            <call method="setCitizeProjectManager">
                <argument type="service" id="AppBundle\CitizenProject\CitizenProjectManager"/>
            </call>
            <call method="setCitizenProjectRepository">
                <argument type="service" id="AppBundle\Repository\CitizenProjectRepository"/>
            </call>
            <call method="setCitizenProjectMessageNotifier">
                <argument type="service" id="app.citizen_project.citizen_project_message_notifier"/>
            </call>
            <call method="setProducer">
                <argument type="service" id="old_sound_rabbit_mq.project_citizen_creation_notification_producer"/>
            </call>
        </service>

        <!-- Redirections from old website -->
        <service id="app.legacy_redirections_subscriber" class="AppBundle\Redirection\LegacyRedirectionsSubscriber">
            <tag name="kernel.event_subscriber" />
        </service>

        <!-- Dynamic redirections subscriber -->
        <service id="app.dynamic_redirections_subscriber" class="AppBundle\Redirection\Dynamic\RedirectionsSubscriber">
            <call method="addHandler">
                <argument type="service" id="app.dynamic_redirect_to_admin_panel_handler" />
            </call>
            <call method="addHandler">
                <argument type="service" id="app.dynamic_redirect_to_remove_uuid_handler" />
            </call>
            <call method="addHandler">
                <argument type="service" id="app.dynamic_redirect_to_route_handler" />
            </call>
            <call method="addHandler">
                <argument type="service" id="app.dynamic_redirect_to_path_handler" />
            </call>
            <tag name="kernel.event_subscriber" />
        </service>

        <!-- Dynamic redirections provider configuration -->
        <service id="app.dynamic_redirections_provider" class="AppBundle\Redirection\Dynamic\RedirectionsProvider" />

        <!-- Dynamic redirections "to admin panel" handler -->
        <service id="app.dynamic_redirect_to_admin_panel_handler" class="AppBundle\Redirection\Dynamic\RedirectToAdminPanelHandler">
            <argument type="service" id="AppBundle\Redirection\Dynamic\RedirectionManager" />
        </service>
        <service id="AppBundle\Redirection\Dynamic\RedirectionManager" class="AppBundle\Redirection\Dynamic\RedirectionManager">
            <argument type="service" id="app.cache.redirection" />
            <argument type="service" id="doctrine.orm.default_entity_manager"/>
            <argument type="service" id="jms_serializer.serializer"/>
        </service>

        <!-- Dynamic redirections "to remove uuid" handler-->
        <service id="app.dynamic_redirect_to_remove_uuid_handler" class="AppBundle\Redirection\Dynamic\RedirectToRemoveUuidHandler">
            <argument type="service" id="app.dynamic_redirections_provider" />
            <argument type="service" id="router" />
            <argument type="service" id="AppBundle\Repository\EventRepository" />
            <argument>%pattern_uuid%</argument>
        </service>

        <!-- Dynamic redirections "to route" handler-->
        <service id="app.dynamic_redirect_to_route_handler" class="AppBundle\Redirection\Dynamic\RedirectToRouteHandler">
            <argument type="service" id="app.dynamic_redirections_provider" />
            <argument type="service" id="router" />
            <argument type="service" id="AppBundle\Repository\EventRepository" />
            <argument type="service" id="AppBundle\Repository\ArticleRepository" />
            <argument type="service" id="AppBundle\Repository\ProposalRepository" />
            <argument type="service" id="AppBundle\Repository\OrderArticleRepository" />
        </service>

        <!-- Dynamic redirections "to path" handler -->
        <service id="app.dynamic_redirect_to_path_handler" class="AppBundle\Redirection\Dynamic\RedirectToPathHandler">
            <argument type="service" id="app.dynamic_redirections_provider" />
        </service>

        <!-- Dynamic redirections "to path" handler -->
        <service id="app.react_routing_loader" class="AppBundle\React\ReactAppRegistry" />

        <!-- Security -->
        <service id="app.security.adherent_login_timestamp_recorder" class="AppBundle\Security\AdherentLoginTimestampRecorder">
            <argument type="service" id="doctrine.orm.entity_manager"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="app.security.2fa_qr_code_factory" class="AppBundle\Security\TwoFactorAuthenticationQrCodeFactory">
            <argument type="service" id="csa_guzzle.client.google_charts_api" />
            <argument type="service" id="scheb_two_factor.security.google_authenticator" />
        </service>

        <service id="AppBundle\Security\AuthenticationUtils">
            <argument type="service" id="security.token_storage" />
        </service>

        <service id="app.security.legacy_migration_listener" class="AppBundle\Security\LegacyMigrationListener">
            <argument type="service" id="security.encoder_factory" />
            <argument type="service" id="doctrine.orm.entity_manager" />

            <tag name="kernel.event_listener" event="security.interactive_login" method="onSecurityInteractiveLogin" />
        </service>

        <service id="AppBundle\Security\InactiveAdminListener">
            <argument type="service" id="Psr\Container\ContainerInterface"/>
            <argument>%env(SESSION_MAX_IDLE_TIME)%</argument>

            <tag name="container.service_subscriber" />
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" />
        </service>

        <!-- Cache -->
        <service id="cache.adapter.null" class="Symfony\Component\Cache\Adapter\NullAdapter" abstract="true">
            <argument/>
            <argument/>
            <argument/>
        </service>

        <service id="cache.redis_doctrine_provider" class="Symfony\Component\Cache\DoctrineProvider">
            <argument type="service">
                <service class="Symfony\Component\Cache\Adapter\RedisAdapter">
                    <argument type="service" id="snc_redis.default" />
                    <argument />
                    <argument>86400</argument>
                </service>
            </argument>
        </service>

        <!-- Sentry -->
        <service id="app.logging.sentry_handler" class="AppBundle\Logging\SentryHandler" public="false">
            <argument type="service">
                <service class="Raven_Client">
                    <argument>%env(SENTRY_DSN)%</argument>
                </service>
            </argument>
            <call method="setRelease">
                <argument>%env(APP_VERSION)%</argument>
            </call>
        </service>

        <service id="app.logging.activation_strategy" class="AppBundle\Logging\ActivationStrategy" public="false">
            <argument type="constant">Monolog\Logger::ERROR</argument>
            <argument type="collection">
                <argument type="constant">Symfony\Component\HttpFoundation\Response::HTTP_NOT_FOUND</argument>
                <argument type="constant">Symfony\Component\HttpFoundation\Response::HTTP_FORBIDDEN</argument>
                <argument type="constant">Symfony\Component\HttpFoundation\Response::HTTP_METHOD_NOT_ALLOWED</argument>
            </argument>
        </service>

        <service id="app.logging.user_processor" class="AppBundle\Logging\CurrentUserProcessor" public="false">
            <argument type="service">
                <service>
                    <argument type="collection">
                        <argument key="security.token_storage" type="service" id="security.token_storage" />
                        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" />
                    </argument>

                    <tag name="container.service_locator" />
                </service>
            </argument>

            <tag name="monolog.processor" method="processRecord" />
        </service>

        <!-- Serializer -->
        <service id="app.serializer_visitor.ical_serialization_visitor" class="AppBundle\Serializer\IcalSerializationVisitor" public="false">
            <tag name="jms_serializer.serialization_visitor" format="ical"/>

            <argument type="service" id="jms_serializer.naming_strategy" />
        </service>

        <service id="app.committee_serializer.committee_event_ical_handler" class="AppBundle\Serializer\EventICalHandler">
            <tag name="jms_serializer.subscribing_handler" />
        </service>

        <service id="app.citizen_project_serializer.citizen_action_ical_handler" class="AppBundle\Serializer\CitizenActionICalHandler">
            <tag name="jms_serializer.subscribing_handler" />
        </service>

        <!-- Form -->
        <service id="AppBundle\Form\TypeExtension\FormTypeExtension">
            <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType" />
        </service>

        <service id="AppBundle\Form\TypeExtension\TextTypeExtension">
            <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\TextType" />
        </service>

        <service id="AppBundle\Form\TypeExtension\PhoneNumberTypeExtension">
            <tag name="form.type_extension" extended-type="Misd\PhoneNumberBundle\Form\Type\PhoneNumberType" />
        </service>

        <service id="AppBundle\Form\SummaryType">
            <argument type="service" id="app.storage" />
            <argument type="service" id="app.glide" />
            <argument type="service" id="doctrine.orm.entity_manager" />
            <tag name="form.type" />
        </service>

        <!-- Doctrine Listeners -->
        <service id="AppBundle\Entity\Listener\ContainingUserDocumentListener" public="true">
            <tag name="doctrine.orm.entity_listener" entity="AppBundle\Entity\Event" event="prePersist" method="prePersistEvent"/>
            <tag name="doctrine.orm.entity_listener" entity="AppBundle\Entity\Event" event="preUpdate" method="preUpdateEvent"/>
            <tag name="doctrine.orm.entity_listener" entity="AppBundle\Entity\Event" event="postUpdate"/>
            <tag name="doctrine.orm.entity_listener" entity="AppBundle\Entity\Event" event="preRemove"/>
            <tag name="doctrine.orm.entity_listener" entity="AppBundle\Entity\Event" event="postRemove"/>
            <tag name="doctrine.orm.entity_listener" entity="AppBundle\Entity\CommitteeFeedItem" event="prePersist" method="prePersistCommitteeFeed"/>
            <tag name="doctrine.orm.entity_listener" entity="AppBundle\Entity\CommitteeFeedItem" event="preUpdate" method="preUpdateCommitteeFeed"/>
            <tag name="doctrine.orm.entity_listener" entity="AppBundle\Entity\CommitteeFeedItem" event="postUpdate"/>
            <tag name="doctrine.orm.entity_listener" entity="AppBundle\Entity\CommitteeFeedItem" event="preRemove"/>
            <tag name="doctrine.orm.entity_listener" entity="AppBundle\Entity\CommitteeFeedItem" event="postRemove"/>
            <argument type="service" id="service_container"/>
            <!--Using Object Manager or service injecting Object Manager as argument causes a Circular reference-->
            <!--Concerned issue https://github.com/symfony/symfony/issues/24775-->
            <!--@todo Replace top line with this one when SF 3.4 will be used and make changes in the class-->
            <!--<argument type="service" id="AppBundle\UserDocument\UserDocumentManager"/>-->
            <argument>%pattern_uuid%</argument>
        </service>
    </services>
</container>
